{"version":3,"file":"static/js/33.cf155ad5.chunk.js","mappings":"oLAEaA,E,OAAkBC,GAAAA,IAAH,oH,SCCfC,EAAS,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACvB,OAAO,SAACH,EAAD,UAAkBG,GAC1B,C,iMCFYC,EAAiBH,EAAAA,GAAAA,IAAH,8JAUdI,GAAWJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,ySAgBRM,GAAWN,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,0VAkBRO,EAAOP,EAAAA,GAAAA,GAAH,2MAUJQ,EAAMR,EAAAA,GAAAA,IAAH,sIAQHS,EAAST,EAAAA,GAAAA,IAAH,sEAKNU,EAAUV,EAAAA,GAAAA,IAAH,+CAIPW,EAAgBX,EAAAA,GAAAA,IAAH,4I,SCyB1B,EAlFqB,WAAO,IAAD,MACzB,GAA0BY,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,YAG3DC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,oGAEdV,GAAa,GAFC,UAGKW,EAAAA,EAAAA,IAAWV,GAHhB,OAGRW,EAHQ,OAIdd,EAASc,GAJK,gDAMdC,QAAQC,IAAI,QAAS,KAAMC,SANb,yBAQdf,GAAa,GARC,4EAAH,qDAWfU,GACD,GAAE,CAACT,IAMJ,OACE,gCACGF,IACC,SAACd,EAAA,EAAD,WACE,SAAC,KAAD,CACE+B,SAAS,EACTC,OAAO,MACPC,MAAM,MACNC,UAAU,iBACVC,aAAc,CAAC,EACfC,aAAa,iBACbC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,gBAI3D,SAAClC,EAAD,CAAUmC,GAAIlB,EAAoBmB,QAAlC,SAA2C,qBAC3C,UAACrC,EAAD,YACE,SAACM,EAAD,WACE,SAACD,EAAD,CACEiC,IACE5B,EAAM6B,YAAN,yCACsC7B,EAAM6B,aAvBtD,gKA0BQC,IAAK9B,EAAM+B,WAIf,UAAClC,EAAD,YACE,wBAAKG,EAAM+B,SACX,yBAAG,iBACY,yBAAIC,KAAKC,MAA2B,GAArBjC,EAAMkC,cAAmB,WAEvD,wBAAI,cACJ,uBAAIlC,EAAMmC,YACV,wBAAI,YACJ,iCAAInC,EAAMoC,cAAV,aAAI,EAAcC,KAAI,qBAAGC,IAAH,IAAoBC,KAAK,eAGnD,UAACzC,EAAD,YACE,wBAAI,4BACJ,UAACJ,EAAD,YACE,yBACE,SAACD,EAAD,CAAUiC,GAAG,OAAb,SAAoB,YAEtB,yBACE,SAACjC,EAAD,CAAUiC,GAAG,UAAb,SAAuB,kBAG3B,SAAC,KAAD,SAIP,C","sources":["components/Loader/Loader.styled.js","components/Loader/Loader.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoaderContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n`;\n","import PropTypes from 'prop-types';\nimport { LoaderContainer } from './Loader.styled';\n\nexport const Loader = ({ children }) => {\n  return <LoaderContainer>{children}</LoaderContainer>;\n};\n\nLoader.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n  }\n`;\n\nexport const BackLink = styled(Link)`\n  display: block;\n  width: 100px;\n  text-align: center;\n  margin: 15px;\n  padding: 5px 15px 5px 15px;\n  border: 1px solid grey;\n  border-radius: 5px;\n  text-decoration: none;\n  color: black;\n  &:hover {\n    background-color: #fce38a;\n    font-weight: 500;\n  }\n`;\n\nexport const LinkInfo = styled(Link)`\n  display: block;\n  width: 100px;\n  text-align: center;\n  border: 1px solid grey;\n  border-radius: 5px;\n  text-decoration: none;\n  color: black;\n  padding: 5px 35px 5px 35px;\n  &:hover {\n    background-color: #fce38a;\n    font-weight: 500;\n  }\n  @media screen and (min-width: 768px) {\n    margin: 15px;\n  }\n`;\n\nexport const List = styled.ul`\n  list-style-type: none;\n  display: flex;\n  justify-content: space-around;\n  padding-left: 0;\n  @media screen and (min-width: 768px) {\n    justify-content: flex-start;\n  }\n`;\n\nexport const Img = styled.img`\n  border-radius: 5px;\n  width: 350px;\n  @media screen and (min-width: 768px) {\n    min-width: 300px;\n  }\n`;\n\nexport const ImgWrp = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const InfoWrp = styled.div`\n  padding-left: 15px;\n`;\n\nexport const AdditionalWrp = styled.div`\n  padding-left: 15px;\n  padding-right: 15px;\n  @media screen and (min-width: 768px) {\n    padding-left: 0;\n  }\n`;\n","import { useRef, useEffect, useState } from 'react';\nimport { fetchMovie } from '../../services/apiService';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { ColorRing } from 'react-loader-spinner';\nimport { Loader } from '../../components/Loader/Loader';\n\nimport {\n  MovieContainer,\n  BackLink,\n  LinkInfo,\n  List,\n  Img,\n  ImgWrp,\n  InfoWrp,\n  AdditionalWrp,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n\n  //Executăm solicitarea de fiecare dată când se schimbă movieId\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n        const data = await fetchMovie(movieId);\n        setMovie(data);\n      } catch (error) {\n        console.log('Error', error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  //Link către imaginea filmului\n  const defaultMovieImg =\n    'https://mishanonoo.com/cdn/shopifycloud/shopify/assets/no-image-2048-5e88c1b20e087fb7bbe9a3771824e743c244f437e4f8ba93bbf7b11b53f7824c_500x750_crop_center.gif';\n\n  return (\n    <>\n      {isLoading && (\n        <Loader>\n          <ColorRing\n            visible={true}\n            height=\"180\"\n            width=\"180\"\n            ariaLabel=\"blocks-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"blocks-wrapper\"\n            colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n          />\n        </Loader>\n      )}\n      <BackLink to={backLinkLocationRef.current}> ↩ Go back</BackLink>\n      <MovieContainer>\n        <ImgWrp>\n          <Img\n            src={\n              movie.poster_path\n                ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n                : defaultMovieImg\n            }\n            alt={movie.title}\n          />\n        </ImgWrp>\n\n        <InfoWrp>\n          <h1>{movie.title}</h1>\n          <p>\n            User scores: <b>{Math.round(movie.vote_average * 10)}%</b>\n          </p>\n          <h2>Overview</h2>\n          <p>{movie.overview}</p>\n          <h2>Genres</h2>\n          <p>{movie.genres?.map(({ name }) => name).join(', ')}</p>\n        </InfoWrp>\n      </MovieContainer>\n      <AdditionalWrp>\n        <h3>Additional information</h3>\n        <List>\n          <li>\n            <LinkInfo to=\"cast\">Cast</LinkInfo>\n          </li>\n          <li>\n            <LinkInfo to=\"reviews\">Reviews</LinkInfo>\n          </li>\n        </List>\n        <Outlet />\n      </AdditionalWrp>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["LoaderContainer","styled","Loader","children","MovieContainer","BackLink","Link","LinkInfo","List","Img","ImgWrp","InfoWrp","AdditionalWrp","useState","movie","setMovie","isLoading","setIsLoading","movieId","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","fetchData","fetchMovie","data","console","log","message","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","to","current","src","poster_path","alt","title","Math","round","vote_average","overview","genres","map","name","join"],"sourceRoot":""}