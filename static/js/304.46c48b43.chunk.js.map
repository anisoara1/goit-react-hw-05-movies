{"version":3,"file":"static/js/304.46c48b43.chunk.js","mappings":"qLAEaA,E,OAAkBC,GAAAA,IAAH,oH,SCCfC,EAAS,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACvB,OAAO,SAACH,EAAD,UAAkBG,GAC1B,C,uGCFYC,GAAaH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,yEAKVK,EAAKL,EAAAA,GAAAA,GAAH,6dAmBFM,EAAKN,EAAAA,GAAAA,GAAH,+UAYFO,EAAMP,EAAAA,GAAAA,IAAH,8DAKHQ,EAAIR,EAAAA,GAAAA,EAAH,8K,SCxCDS,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MAMjB,OACE,SAACP,EAAD,UACGK,EAAOG,KAAI,SAAAC,GAAK,OACf,SAACR,EAAD,WACE,UAACH,EAAD,CAAYY,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAtD,WACE,SAACJ,EAAD,CACEY,IACEL,EAAMM,YAAN,yCACsCN,EAAMM,aAVxD,gKAaUC,IAAKP,EAAMQ,SAEb,SAACd,EAAD,UAAIM,EAAMQ,YAVLR,EAAME,GADA,KAiBtB,C,mKC5BYO,E,OAAQvB,GAAAA,GAAH,mE,kBC8ClB,EAzCa,WACX,OAA4BwB,EAAAA,EAAAA,UAAS,IAArC,eAAOd,EAAP,KAAee,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KAkBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,oGAEdF,GAAa,GAFC,UAGKG,EAAAA,EAAAA,MAHL,OAGRC,EAHQ,OAIdN,GAAU,OAAIM,EAAKC,UAJL,gDAMdC,QAAQC,IAAI,QAAS,KAAMC,SANb,yBAQdR,GAAa,GARC,4EAAH,qDAWfE,GACD,GAAE,KAGD,gCACGH,IACC,SAACzB,EAAA,EAAD,WACE,SAAC,KAAD,CACEmC,SAAS,EACTC,OAAO,MACPC,MAAM,MACNC,UAAU,iBACVC,aAAc,CAAC,EACfC,aAAa,iBACbC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,gBAI3D,SAACnB,EAAD,UAAO,oBACP,SAACd,EAAA,EAAD,CAAYC,OAAQA,MAGzB,C","sources":["components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoaderContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n`;\n","import PropTypes from 'prop-types';\nimport { LoaderContainer } from './Loader.styled';\n\nexport const Loader = ({ children }) => {\n  return <LoaderContainer>{children}</LoaderContainer>;\n};\n\nLoader.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  text-align: center;\n`;\n\nexport const Ul = styled.ul`\n  list-style-type: none;\n  display: grid;\n  max-width: calc(100vw - 65px);\n  grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));\n  grid-gap: 15px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n  @media screen and (min-width: 768px) {\n    max-width: calc(100vw - 48px);\n    grid-template-columns: repeat(auto-fill, minmax(230px, 1fr));\n    grid-gap: 40px;\n  }\n`;\n\nexport const Li = styled.li`\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  border-radius: 5px;\n  border: 1px solid black;\n  overflow: hidden;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.03);\n  }\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n  object-fit: cover;\n`;\n\nexport const P = styled.p`\n  font-size: 12px;\n  font-weight: 700;\n  color: black;\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    font-weight: 700;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { StyledLink, Ul, Li, Img, P } from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  //Link către imaginea filmului\n  const defaultMovieImg =\n    'https://mishanonoo.com/cdn/shopifycloud/shopify/assets/no-image-2048-5e88c1b20e087fb7bbe9a3771824e743c244f437e4f8ba93bbf7b11b53f7824c_500x750_crop_center.gif';\n\n  return (\n    <Ul>\n      {movies.map(movie => (\n        <Li key={movie.id}>\n          <StyledLink to={`/movies/${movie.id}`} state={{ from: location }}>\n            <Img\n              src={\n                movie.poster_path\n                  ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n                  : defaultMovieImg\n              }\n              alt={movie.title}\n            />\n            <P>{movie.title}</P>\n          </StyledLink>\n        </Li>\n      ))}\n    </Ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    }).isRequired\n  ),\n};\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  font-size: 32px;\n  text-align: center;\n`;\n","import { useEffect, useState } from 'react';\nimport { fetchTrends } from '../../services/apiService';\nimport { MoviesList } from '../../components/MoviesList/MoviesList';\nimport { ColorRing } from 'react-loader-spinner';\nimport { Title } from './Home.styled';\nimport { Loader } from '../../components/Loader/Loader';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  //La încărcarea paginii, efectuăm o solicitare de informații despre filmele populare de astăzi\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n        const data = await fetchTrends();\n        setMovies([...data.results]);\n      } catch (error) {\n        console.log('Error', error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <>\n      {isLoading && (\n        <Loader>\n          <ColorRing\n            visible={true}\n            height=\"180\"\n            width=\"180\"\n            ariaLabel=\"blocks-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"blocks-wrapper\"\n            colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n          />\n        </Loader>\n      )}\n      <Title>Tranding Today</Title>\n      <MoviesList movies={movies} />\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["LoaderContainer","styled","Loader","children","StyledLink","Link","Ul","Li","Img","P","MoviesList","movies","location","useLocation","map","movie","to","id","state","from","src","poster_path","alt","title","Title","useState","setMovies","isLoading","setIsLoading","useEffect","fetchData","fetchTrends","data","results","console","log","message","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors"],"sourceRoot":""}