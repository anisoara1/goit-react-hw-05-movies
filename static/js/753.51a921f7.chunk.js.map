{"version":3,"file":"static/js/753.51a921f7.chunk.js","mappings":"qLAEaA,E,OAAkBC,GAAAA,IAAH,oH,SCCfC,EAAS,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACvB,OAAO,SAACH,EAAD,UAAkBG,GAC1B,C,uGCFYC,GAAaH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,yEAKVK,EAAKL,EAAAA,GAAAA,GAAH,6dAmBFM,EAAKN,EAAAA,GAAAA,GAAH,+UAYFO,EAAMP,EAAAA,GAAAA,IAAH,8DAKHQ,EAAIR,EAAAA,GAAAA,EAAH,8K,SCxCDS,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MAMjB,OACE,SAACP,EAAD,UACGK,EAAOG,KAAI,SAAAC,GAAK,OACf,SAACR,EAAD,WACE,UAACH,EAAD,CAAYY,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAtD,WACE,SAACJ,EAAD,CACEY,IACEL,EAAMM,YAAN,yCACsCN,EAAMM,aAVxD,gKAaUC,IAAKP,EAAMQ,SAEb,SAACd,EAAD,UAAIM,EAAMQ,YAVLR,EAAME,GADA,KAiBtB,C,gLC5BYO,EAAgBvB,EAAAA,GAAAA,IAAH,wFAKbwB,EAAOxB,EAAAA,GAAAA,KAAH,yLAUJyB,EAAczB,EAAAA,GAAAA,MAAH,6HAQX0B,EAAe1B,EAAAA,GAAAA,OAAH,6N,SChBZ2B,EAAa,WAAO,IAAD,EAC9B,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAM,UAAGF,EAAaG,IAAI,sBAApB,QAAsC,GAalD,OACE,SAACT,EAAD,WACE,UAACC,EAAD,CAAMS,aAAa,MAAMC,SAZR,SAAAC,GACnBA,EAAIC,iBACiD,KAAjDD,EAAIE,OAAOC,SAASC,YAAYC,MAAMC,QAI1CX,EAAgB,CAAES,YAAaJ,EAAIE,OAAOC,SAASC,YAAYC,QAC/DL,EAAIO,cAAcC,SAJhBC,EAAAA,GAAAA,MAAY,2BAKf,EAIG,WACE,SAACnB,EAAD,CACEoB,KAAK,OACLC,YAAY,sBACZC,KAAK,cACLC,aAAcjB,KAEhB,SAACL,EAAD,CAAcmB,KAAK,SAAnB,SAA4B,eAInC,E,2BCqBD,EAjDe,WACb,OAA4BI,EAAAA,EAAAA,UAAS,IAArC,eAAOvC,EAAP,KAAewC,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAAsBxB,EAAAA,EAAAA,MAChByB,GADN,eAC0BrB,IAAI,eAwB9B,OArBAsB,EAAAA,EAAAA,YAAU,WACR,GAAKD,EAAL,CACA,IAAME,EAAS,mCAAG,oGAEdH,GAAa,GAFC,UAGKI,EAAAA,EAAAA,IAAYH,GAHjB,UAGRI,EAHQ,OAIdP,GAAU,OAAIO,EAAKC,UACdD,EAAKC,QAAQC,OALJ,yCAMLf,EAAAA,GAAAA,MACL,4EAPU,yDAWdgB,QAAQC,IAAI,QAAS,KAAMC,SAXb,yBAadV,GAAa,GAbC,6EAAH,qDAgBfG,GAjBkB,CAkBnB,GAAE,CAACF,KAGF,2BACGF,IACC,SAAClD,EAAA,EAAD,WACE,SAAC,KAAD,CACE8D,SAAS,EACTC,OAAO,MACPC,MAAM,MACNC,UAAU,iBACVC,aAAc,CAAC,EACfC,aAAa,iBACbC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,gBAI3D,SAAC1C,EAAD,KACA,SAAClB,EAAA,EAAD,CAAYC,OAAQA,MAGzB,C","sources":["components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoaderContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n`;\n","import PropTypes from 'prop-types';\nimport { LoaderContainer } from './Loader.styled';\n\nexport const Loader = ({ children }) => {\n  return <LoaderContainer>{children}</LoaderContainer>;\n};\n\nLoader.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  text-align: center;\n`;\n\nexport const Ul = styled.ul`\n  list-style-type: none;\n  display: grid;\n  max-width: calc(100vw - 65px);\n  grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));\n  grid-gap: 15px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n  @media screen and (min-width: 768px) {\n    max-width: calc(100vw - 48px);\n    grid-template-columns: repeat(auto-fill, minmax(230px, 1fr));\n    grid-gap: 40px;\n  }\n`;\n\nexport const Li = styled.li`\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  border-radius: 5px;\n  border: 1px solid black;\n  overflow: hidden;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.03);\n  }\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n  object-fit: cover;\n`;\n\nexport const P = styled.p`\n  font-size: 12px;\n  font-weight: 700;\n  color: black;\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    font-weight: 700;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { StyledLink, Ul, Li, Img, P } from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  //Link către imaginea filmului\n  const defaultMovieImg =\n    'https://mishanonoo.com/cdn/shopifycloud/shopify/assets/no-image-2048-5e88c1b20e087fb7bbe9a3771824e743c244f437e4f8ba93bbf7b11b53f7824c_500x750_crop_center.gif';\n\n  return (\n    <Ul>\n      {movies.map(movie => (\n        <Li key={movie.id}>\n          <StyledLink to={`/movies/${movie.id}`} state={{ from: location }}>\n            <Img\n              src={\n                movie.poster_path\n                  ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n                  : defaultMovieImg\n              }\n              alt={movie.title}\n            />\n            <P>{movie.title}</P>\n          </StyledLink>\n        </Li>\n      ))}\n    </Ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    }).isRequired\n  ),\n};\n","import styled from 'styled-components';\n\nexport const FormContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 15px;\n`;\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  width: 400px;\n  background-color: #f2f2f2;\n  border-radius: 25px;\n  padding: 5px 10px;\n  margin: 20px 0 20px 0;\n`;\n\nexport const InputStyled = styled.input`\n  flex: 1;\n  border: none;\n  background-color: transparent;\n  outline: none;\n  font-size: 16px;\n`;\n\nexport const ButtonStyled = styled.button`\n  border: none;\n  background-color: #fce38a;\n  /* color: white; */\n  padding: 8px 15px;\n  border-radius: 25px;\n  cursor: pointer;\n  font-size: 16px;\n  font-weight: 500;\n  color: darkgray;\n`;\n","import { useSearchParams } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport {\n  FormContainer,\n  Form,\n  ButtonStyled,\n  InputStyled,\n} from './SearchForm.styled';\n\nexport const SearchForm = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const search = searchParams.get('searchQuery') ?? '';\n\n  //Funcția de trimitere a formularului de căutare\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    if (evt.target.elements.searchQuery.value.trim() === '') {\n      toast.error('You didnt enter anything');\n      return;\n    }\n    setSearchParams({ searchQuery: evt.target.elements.searchQuery.value });\n    evt.currentTarget.reset();\n  };\n\n  return (\n    <FormContainer>\n      <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n        <InputStyled\n          type=\"text\"\n          placeholder=\"Enter movie name...\"\n          name=\"searchQuery\"\n          defaultValue={search}\n        />\n        <ButtonStyled type=\"submit\">Search</ButtonStyled>\n      </Form>\n    </FormContainer>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchMovies } from '../../services/apiService';\nimport { SearchForm } from '../../components/SearchForm/SearchForm';\nimport { MoviesList } from '../../components/MoviesList/MoviesList';\nimport { Loader } from '../../components/Loader/Loader';\nimport { ColorRing } from 'react-loader-spinner';\nimport toast from 'react-hot-toast';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParam] = useSearchParams();\n  const query = searchParam.get('searchQuery');\n\n  //Execută interogarea de fiecare dată când interogarea se modifică\n  useEffect(() => {\n    if (!query) return;\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n        const data = await fetchMovies(query);\n        setMovies([...data.results]);\n        if (!data.results.length) {\n          return toast.error(\n            'Sorry, there are no movies matching your search query. Please try again'\n          );\n        }\n      } catch (error) {\n        console.log('Error', error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [query]);\n\n  return (\n    <div>\n      {isLoading && (\n        <Loader>\n          <ColorRing\n            visible={true}\n            height=\"180\"\n            width=\"180\"\n            ariaLabel=\"blocks-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"blocks-wrapper\"\n            colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n          />\n        </Loader>\n      )}\n      <SearchForm />\n      <MoviesList movies={movies} />\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["LoaderContainer","styled","Loader","children","StyledLink","Link","Ul","Li","Img","P","MoviesList","movies","location","useLocation","map","movie","to","id","state","from","src","poster_path","alt","title","FormContainer","Form","InputStyled","ButtonStyled","SearchForm","useSearchParams","searchParams","setSearchParams","search","get","autoComplete","onSubmit","evt","preventDefault","target","elements","searchQuery","value","trim","currentTarget","reset","toast","type","placeholder","name","defaultValue","useState","setMovies","isLoading","setIsLoading","query","useEffect","fetchData","fetchMovies","data","results","length","console","log","message","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors"],"sourceRoot":""}